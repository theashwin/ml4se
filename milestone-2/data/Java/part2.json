[
    {
        "func_id": 25,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/TopologicalOperations.java",
        "function_name": "getVertexByID_",
        "function": "int getVertexByID_(int vertex, int geometry_id) {\n    if (geometry_id == -1)\n        return vertex;\n\n    return getVertexByIDImpl_(vertex, geometry_id);\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 26,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/TopologicalOperations.java",
        "function_name": "getVertexByIDImpl_",
        "function": "int getVertexByIDImpl_(int vertex, int geometry_id) {\n    EditShape shape = m_topo_graph.getShape();\n    int v;\n    int geometry;\n    int vertex_iterator = m_topo_graph\n            .getClusterVertexIterator(m_topo_graph\n                    .getClusterFromVertex(vertex));\n\n    do {\n        v = m_topo_graph.getVertexFromVertexIterator(vertex_iterator);\n        geometry = shape.getGeometryFromPath(shape.getPathFromVertex(v));\n\n        if (geometry == geometry_id)\n            return v;\n\n        vertex_iterator = m_topo_graph\n                .incrementVertexIterator(vertex_iterator);\n    } while (vertex_iterator != -1);\n\n    return vertex;\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 27,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/TopologicalOperations.java",
        "function_name": "selectVertex_",
        "function": "int selectVertex_(int cluster, EditShape shape) {\n    int vert = -1;\n    for (int iterator = m_topo_graph.getClusterVertexIterator(cluster); iterator != -1; iterator = m_topo_graph\n            .incrementVertexIterator(iterator)) {\n        int vertex = m_topo_graph.getVertexFromVertexIterator(iterator);\n        if (vert == -1)\n            vert = vertex;\n        int geometry = shape.getGeometryFromPath(shape\n                .getPathFromVertex(vertex));\n        int geomID = m_topo_graph.getGeometryID(geometry);\n        if (isGoodParentage(geomID)) {\n            vert = vertex;\n            break;\n        }\n    }\n\n    return vert;\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 28,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/StringUtils.java",
        "function_name": "removeTrailingZeros_",
        "function": "static private StringBuilder removeTrailingZeros_(String str_dbl) {\n    StringBuilder buffer = new StringBuilder(str_dbl);\n    int non_zero = buffer.length() - 1;\n\n    while (buffer.charAt(non_zero) == '0') {\n        non_zero--;\n    }\n\n    buffer.delete(non_zero + 1, buffer.length());\n\n    if (buffer.charAt(non_zero) == '.') {\n        buffer.deleteCharAt(non_zero);\n    }\n\n    return buffer;\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 29,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/Proximity2DResult.java",
        "function_name": "getCoordinate",
        "function": "public Point getCoordinate() {\n    if (isEmpty())\n        throw new GeometryException(\"invalid call\");\n\n    return new Point(m_coordinate.x, m_coordinate.y);\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 30,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/Proximity2DResult.java",
        "function_name": "getDistance",
        "function": "public double getDistance() {\n\t\tif (isEmpty())\n\t\t\tthrow new GeometryException(\"invalid call\");\n\n\t\treturn m_distance;\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 31,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/Polyline.java",
        "function_name": "getDimension",
        "function": "public int getDimension() {\n    return 1;\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 32,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/Point.java",
        "function_name": "getXYZ",
        "function": "public Point3D getXYZ() {\n    Point3D pt = new Point3D();\n    pt.x = m_x;\n    pt.y = m_y;\n    pt.z = hasZ() ? m_attributes[0] : VertexDescription.getDefaultValue(VertexDescription.Semantics.Z);\n\n    return pt;\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 33,
        "project_repo": "https://github.com/Esri/geometry-api-java",
        "location": "src/main/java/com/esri/core/geometry/Point.java",
        "function_name": "getAttributeAsDbl",
        "function": "public double getAttributeAsDbl(int semantics, int ordinate) {\n    if (semantics == VertexDescription.Semantics.POSITION) {\n        if (ordinate == 0) {\n            return m_x;\n        }\n        else if (ordinate == 1) {\n            return m_y;\n        }\n        else {\n            throw new IndexOutOfBoundsException();\n        }\n    }\n    \n    int ncomps = VertexDescription.getComponentCount(semantics);\n    if (ordinate >= ncomps)\n        throw new IndexOutOfBoundsException();\n\n    int attributeIndex = m_description.getAttributeIndex(semantics);\n    if (attributeIndex >= 0)\n        return m_attributes[m_description\n                ._getPointAttributeOffset(attributeIndex) - 2 + ordinate];\n    else\n        return VertexDescription.getDefaultValue(semantics);\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 34,
        "project_repo": "https://github.com/locationtech/jts",
        "location": "src/main/java/com/esri/core/geometry/OperatorSimplifyLocalHelper.java",
        "function_name": "testToleranceDistance_",
        "function": "private boolean testToleranceDistance_(int xyindex1, int xyindex2) {\n    double x1 = m_xy.read(2 * xyindex1);\n    double y1 = m_xy.read(2 * xyindex1 + 1);\n    double x2 = m_xy.read(2 * xyindex2);\n    double y2 = m_xy.read(2 * xyindex2 + 1);\n    boolean b = !Clusterer.isClusterCandidate_(x1, y1, x2, y2,\n            m_toleranceIsSimple * m_toleranceIsSimple);\n    if (!b) {\n        if (m_geometry.getDimension() == 0)\n            return false;\n\n        return (x1 == x2 && y1 == y2); // points either coincide or\n                                        // further,than the tolerance\n    }\n\n    return b;\n}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 35,
        "project_repo": "https://github.com/geomajas/geomajas-project-geometry",
        "location": "jts/src/main/java/org/geomajas/geometry/conversion/jts/GeometryConverterService.java",
        "function_name": "getGeometryType",
        "function": "private static String getGeometryType(com.vividsolutions.jts.geom.Geometry geometry) throws JtsConversionException {\n\t\tif (geometry instanceof Point) {\n\t\t\treturn Geometry.POINT;\n\t\t} else if (geometry instanceof LinearRing) {\n\t\t\treturn Geometry.LINEAR_RING;\n\t\t} else if (geometry instanceof LineString) {\n\t\t\treturn Geometry.LINE_STRING;\n\t\t} else if (geometry instanceof Polygon) {\n\t\t\treturn Geometry.POLYGON;\n\t\t} else if (geometry instanceof MultiPoint) {\n\t\t\treturn Geometry.MULTI_POINT;\n\t\t} else if (geometry instanceof MultiLineString) {\n\t\t\treturn Geometry.MULTI_LINE_STRING;\n\t\t} else if (geometry instanceof GeometryCollection) {\n\t\t\t// Multi-polygon and other GeometryCollection implementations\n\t\t\treturn Geometry.MULTI_POLYGON;\n\t\t} else {\n\t\t\tthrow new JtsConversionException(\"Error while converting to Geomajas: Unknown geometry type.\");\n\t\t}\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 36,
        "project_repo": "https://github.com/apache/flink",
        "location": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/util/SegmentsUtil.java",
        "function_name": "getByte",
        "function": "public static byte getByte(MemorySegment[] segments, int offset) {\n\t\tif (inFirstSegment(segments, offset, 1)) {\n\t\t\treturn segments[0].get(offset);\n\t\t} else {\n\t\t\treturn getByteMultiSegments(segments, offset);\n\t\t}\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 37,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
        "function_name": "newBigInteger",
        "function": "public static BigInteger newBigInteger(String str) {\n\t\tstr = StrUtil.trimToNull(str);\n\t\tif (null == str) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint pos = 0; // 数字字符串位置\n\t\tint radix = 10;\n\t\tboolean negate = false; // 负数与否\n\t\tif (str.startsWith(\"-\")) {\n\t\t\tnegate = true;\n\t\t\tpos = 1;\n\t\t}\n\t\tif (str.startsWith(\"0x\", pos) || str.startsWith(\"0X\", pos)) {\n\t\t\t// hex\n\t\t\tradix = 16;\n\t\t\tpos += 2;\n\t\t} else if (str.startsWith(\"#\", pos)) {\n\t\t\t// alternative hex (allowed by Long/Integer)\n\t\t\tradix = 16;\n\t\t\tpos++;\n\t\t} else if (str.startsWith(\"0\", pos) && str.length() > pos + 1) {\n\t\t\t// octal; so long as there are additional digits\n\t\t\tradix = 8;\n\t\t\tpos++;\n\t\t} // default is to treat as decimal\n\n\t\tif (pos > 0) {\n\t\t\tstr = str.substring(pos);\n\t\t}\n\t\tfinal BigInteger value = new BigInteger(str, radix);\n\t\treturn negate ? value.negate() : value;\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 38,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
        "function_name": "partValue",
        "function": "public static int partValue(int total, int partCount, boolean isPlusOneWhenHasRem) {\n\t\tint partValue = 0;\n\t\tif (total % partCount == 0) {\n\t\t\tpartValue = total / partCount;\n\t\t} else {\n\t\t\tpartValue = (int) Math.floor(total / partCount);\n\t\t\tif (isPlusOneWhenHasRem) {\n\t\t\t\tpartValue += 1;\n\t\t\t}\n\t\t}\n\t\treturn partValue;\n\t}\n",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 39,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
        "function_name": "toBytes",
        "function": "public static byte[] toBytes(int value) {\n\t\tfinal byte[] result = new byte[4];\n\n\t\tresult[0] = (byte) (value >> 24);\n\t\tresult[1] = (byte) (value >> 16);\n\t\tresult[2] = (byte) (value >> 8);\n\t\tresult[3] = (byte) (value /* >> 0 */);\n\n\t\treturn result;\n\t}\n",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 40,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/HashUtil.java",
        "function_name": "fnvHash",
        "function": "public static int fnvHash(String data) {\n\t\tfinal int p = 16777619;\n\t\tint hash = (int) 2166136261L;\n\t\tfor (int i = 0; i < data.length(); i++) {\n\t\t\thash = (hash ^ data.charAt(i)) * p;\n\t\t}\n\t\thash += hash << 13;\n\t\thash ^= hash >> 7;\n\t\thash += hash << 3;\n\t\thash ^= hash >> 17;\n\t\thash += hash << 5;\n\t\treturn hash;\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 41,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/HashUtil.java",
        "function_name": "parseArray",
        "function": "public static JSONArray parseArray(String jsonStr) {\n\t\treturn new JSONArray(jsonStr);\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 42,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-json/src/main/java/cn/hutool/json/JSONUtil.java",
        "function_name": "fnvHash",
        "function": "public static int fnvHash(String data) {\n\t\tfinal int p = 16777619;\n\t\tint hash = (int) 2166136261L;\n\t\tfor (int i = 0; i < data.length(); i++) {\n\t\t\thash = (hash ^ data.charAt(i)) * p;\n\t\t}\n\t\thash += hash << 13;\n\t\thash ^= hash >> 7;\n\t\thash += hash << 3;\n\t\thash ^= hash >> 17;\n\t\thash += hash << 5;\n\t\treturn hash;\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 43,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java",
        "function_name": "escape",
        "function": "public static String escape(String string) {\n\t\tfinal StringBuilder sb = new StringBuilder(string.length());\n\t\tfor (int i = 0, length = string.length(); i < length; i++) {\n\t\t\tchar c = string.charAt(i);\n\t\t\tswitch (c) {\n\t\t\tcase '&':\n\t\t\t\tsb.append(\"&amp;\");\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tsb.append(\"&lt;\");\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tsb.append(\"&gt;\");\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\tsb.append(\"&quot;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tsb.append(\"&apos;\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsb.append(c);\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 44,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/util/PageUtil.java",
        "function_name": "rainbow",
        "function": "public static int[] rainbow(int currentPage, int pageCount, int displayCount) {\n\t\tboolean isEven = true;\n\t\tisEven = displayCount % 2 == 0;\n\t\tint left = displayCount / 2;\n\t\tint right = displayCount / 2;\n\n\t\tint length = displayCount;\n\t\tif (isEven) {\n\t\t\tright++;\n\t\t}\n\t\tif (pageCount < displayCount) {\n\t\t\tlength = pageCount;\n\t\t}\n\t\tint[] result = new int[length];\n\t\tif (pageCount >= displayCount) {\n\t\t\tif (currentPage <= left) {\n\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\tresult[i] = i + 1;\n\t\t\t\t}\n\t\t\t} else if (currentPage > pageCount - right) {\n\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\tresult[i] = i + pageCount - displayCount + 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\tresult[i] = i + currentPage - left + (isEven ? 1 : 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\tresult[i] = i + 1;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 45,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
        "function_name": "calendar",
        "function": "public static Calendar calendar(Date date) {\n\t\tif(date instanceof DateTime) {\n\t\t\treturn ((DateTime)date).toCalendar();\n\t\t}else {\n\t\t\treturn calendar(date.getTime());\n\t\t}\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 46,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
        "function_name": "yearAndQuarter",
        "function": "public static LinkedHashSet<String> yearAndQuarter(long startDate, long endDate) {\n\t\tLinkedHashSet<String> quarters = new LinkedHashSet<>();\n\t\tfinal Calendar cal = calendar(startDate);\n\t\twhile (startDate <= endDate) {\n\t\t\t// 如果开始时间超出结束时间，让结束时间为开始时间，处理完后结束循环\n\t\t\tquarters.add(yearAndQuarter(cal));\n\n\t\t\tcal.add(Calendar.MONTH, 3);\n\t\t\tstartDate = cal.getTimeInMillis();\n\t\t}\n\n\t\treturn quarters;\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 47,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
        "function_name": "parse",
        "function": "public static DateTime parse(String dateStr) {\n\t\tif (null == dateStr) {\n\t\t\treturn null;\n\t\t}\n\t\t// 去掉两边空格并去掉中文日期中的“日”，以规范长度\n\t\tdateStr = dateStr.trim().replace(\"日\", \"\");\n\t\tint length = dateStr.length();\n\n\t\tif (Validator.isNumber(dateStr)) {\n\t\t\t// 纯数字形式\n\t\t\tif (length == DatePattern.PURE_DATETIME_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_DATETIME_FORMAT);\n\t\t\t} else if (length == DatePattern.PURE_DATETIME_MS_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_DATETIME_MS_FORMAT);\n\t\t\t} else if (length == DatePattern.PURE_DATE_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_DATE_FORMAT);\n\t\t\t} else if (length == DatePattern.PURE_TIME_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_TIME_FORMAT);\n\t\t\t}\n\t\t}\n\n\t\tif (length == DatePattern.NORM_DATETIME_PATTERN.length() || length == DatePattern.NORM_DATETIME_PATTERN.length() + 1) {\n\t\t\tif (dateStr.contains(\"T\")) {\n\t\t\t\t// UTC时间格式：类似2018-09-13T05:34:31\n\t\t\t\treturn parseUTC(dateStr);\n\t\t\t}\n\t\t\treturn parseDateTime(dateStr);\n\t\t} else if (length == DatePattern.NORM_DATE_PATTERN.length()) {\n\t\t\treturn parseDate(dateStr);\n\t\t} else if (length == DatePattern.NORM_TIME_PATTERN.length() || length == DatePattern.NORM_TIME_PATTERN.length() + 1) {\n\t\t\treturn parseTimeToday(dateStr);\n\t\t} else if (length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() || length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() + 1) {\n\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MINUTE_FORMAT);\n\t\t} else if (length >= DatePattern.NORM_DATETIME_MS_PATTERN.length() - 2) {\n\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MS_FORMAT);\n\t\t}\n\n\t\t// 没有更多匹配的时间格式\n\t\tthrow new DateException(\"No format fit for date String [{}] !\", dateStr);\n\t}",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 48,
        "project_repo": "https://github.com/hankcs/HanLP",
        "location": "src/main/java/com/hankcs/hanlp/utility/ByteUtil.java",
        "function_name": "bytesHighFirstToDouble",
        "function": "public static double bytesHighFirstToDouble(byte[] bytes, int start)\n    {\n        long l = ((long) bytes[start] << 56) & 0xFF00000000000000L;\n        // 如果不强制转换为long，那么默认会当作int，导致最高32位丢失\n        l |= ((long) bytes[1 + start] << 48) & 0xFF000000000000L;\n        l |= ((long) bytes[2 + start] << 40) & 0xFF0000000000L;\n        l |= ((long) bytes[3 + start] << 32) & 0xFF00000000L;\n        l |= ((long) bytes[4 + start] << 24) & 0xFF000000L;\n        l |= ((long) bytes[5 + start] << 16) & 0xFF0000L;\n        l |= ((long) bytes[6 + start] << 8) & 0xFF00L;\n        l |= (long) bytes[7 + start] & 0xFFL;\n\n        return Double.longBitsToDouble(l);\n    }",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 49,
        "project_repo": "https://github.com/hankcs/HanLP",
        "location": "src/main/java/com/hankcs/hanlp/utility/ByteUtil.java",
        "function_name": "fnvHash",
        "function": "public static long bytesToLong(byte[] b)\n    {\n        long l = ((long) b[0] << 56) & 0xFF00000000000000L;\n        // 如果不强制转换为long，那么默认会当作int，导致最高32位丢失\n        l |= ((long) b[1] << 48) & 0xFF000000000000L;\n        l |= ((long) b[2] << 40) & 0xFF0000000000L;\n        l |= ((long) b[3] << 32) & 0xFF00000000L;\n        l |= ((long) b[4] << 24) & 0xFF000000L;\n        l |= ((long) b[5] << 16) & 0xFF0000L;\n        l |= ((long) b[6] << 8) & 0xFF00L;\n        l |= (long) b[7] & 0xFFL;\n        return l;\n    }",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    },
    {
        "func_id": 50,
        "project_repo": "https://github.com/looly/hutool",
        "location": "hutool-core/src/main/java/cn/hutool/core/swing/RobotUtil.java",
        "function_name": "bytesToLong",
        "function": "public static long bytesToLong(byte[] b)\n    {\n        long l = ((long) b[0] << 56) & 0xFF00000000000000L;\n        // 如果不强制转换为long，那么默认会当作int，导致最高32位丢失\n        l |= ((long) b[1] << 48) & 0xFF000000000000L;\n        l |= ((long) b[2] << 40) & 0xFF0000000000L;\n        l |= ((long) b[3] << 32) & 0xFF00000000L;\n        l |= ((long) b[4] << 24) & 0xFF000000L;\n        l |= ((long) b[5] << 16) & 0xFF0000L;\n        l |= ((long) b[6] << 8) & 0xFF00L;\n        l |= (long) b[7] & 0xFFL;\n        return l;\n    }",
        "non_primitive_data_objects": "",
        "primitive_data_objects": "",
        "input": "",
        "expected_output": ""
    }
]