[
  {
    "func_id": 1,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Bufferer.java",
    "function_name": "progress_",
    "function": "private void progress_() {\n\t\tm_progress_counter++;\n\t\tif (m_progress_counter % 1024 == 0) {\n\t\t\tif ((m_progress_tracker != null)\n\t\t\t\t\t&& !(m_progress_tracker.progress(-1, -1)))\n\t\t\t\tthrow new RuntimeException(\"user_canceled\");\n\t\t}\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "m_progress_counter",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 2,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Bufferer.java",
    "function_name": "calcN_",
    "function": "private int calcN_() {\n\t\t//this method should be called only once m_circle_template_size is set then;\n\t\tfinal int minN = 4;\n\t\tif (m_densify_dist == 0)\n\t\t\treturn m_max_vertex_in_complete_circle;\n\n\t\tdouble r = m_densify_dist * Math.abs(m_abs_distance_reversed);\n\t\tdouble cos_a = 1 - r;\n\t\tdouble N;\n\t\tif (cos_a < -1)\n\t\t\tN = minN;\n\t\telse\n\t\t\tN = 2.0 * Math.PI / Math.acos(cos_a) + 0.5;\n\n\t\tif (N < minN)\n\t\t\tN = minN;\n\t\telse if (N > m_max_vertex_in_complete_circle)\n\t\t\tN = m_max_vertex_in_complete_circle;\n\n\t\treturn (int) N;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 3,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/ConstructOffset.java",
    "function_name": "scal",
    "function": "double scal(GraphicPoint pt1, GraphicPoint pt2, GraphicPoint pt3,\n\t\t\tGraphicPoint pt4) {\n\t\treturn (pt2.x - pt1.x) * (pt4.x - pt3.x) + (pt2.y - pt1.y)\n\t\t\t\t* (pt4.y - pt3.y);\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "ultra-hard"
  },
  {
    "func_id": 4,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/ConvexHull.java",
    "function_name": "addGeometry",
    "function": "void addGeometry(Geometry geometry) {\n\t\tif (geometry.isEmpty())\n\t\t\treturn;\n\t\t\n\t\tint type = geometry.getType().value();\n\n\t\tif (MultiVertexGeometry.isMultiVertex(type))\n\t\t\taddMultiVertexGeometry_((MultiVertexGeometry) geometry);\n\t\telse if (MultiPath.isSegment(type))\n\t\t\taddSegment_((Segment) geometry);\n\t\telse if (type == Geometry.GeometryType.Envelope)\n\t\t\taddEnvelope_((Envelope) geometry);\n\t\telse if (type == Geometry.GeometryType.Point)\n\t\t\taddPoint_((Point) geometry);\n\t\telse\n\t\t\tthrow new IllegalArgumentException(\"invalid shape type\");\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 5,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/MathUtils.java",
    "function_name": "truncate",
    "function": "static double truncate(double v) {\n\t\tif (v >= 0)\n\t\t\treturn Math.floor(v);\n\t\telse\n\t\t\treturn -Math.floor(-v);\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 6,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/MathUtils.java",
    "function_name": "lerp",
    "function": "static double lerp(double start_, double end_, double t) {\n\t\t// When end == start, we want result to be equal to start, for all t\n\t\t// values. At the same time, when end != start, we want the result to be\n\t\t// equal to start for t==0 and end for t == 1.0\n\t\t// The regular formula end_ * t + (1.0 - t) * start_, when end_ ==\n\t\t// start_, and t at 1/3, produces value different from start\n\t\tdouble v;\n\t\tif (t <= 0.5)\n\t\t\tv = start_ + (end_ - start_) * t;\n\t\telse\n\t\t\tv = end_ - (end_ - start_) * (1.0 - t);\n\n\t\tassert (t < 0 || t > 1.0 || (v >= start_ && v <= end_) || (v <= start_ && v >= end_) || NumberUtils.isNaN(start_) || NumberUtils.isNaN(end_));\n\t\treturn v;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 7,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/MathUtils.java",
    "function_name": "lerp",
    "function": "static void lerp(Point2D start_, Point2D end_, double t, Point2D result) {\n\t\tassert(start_ != result);\n\t\t// When end == start, we want result to be equal to start, for all t\n\t\t// values. At the same time, when end != start, we want the result to be\n\t\t// equal to start for t==0 and end for t == 1.0\n\t\t// The regular formula end_ * t + (1.0 - t) * start_, when end_ ==\n\t\t// start_, and t at 1/3, produces value different from start\n\t\tdouble rx, ry;\n\t\tif (t <= 0.5) {\n\t\t\trx = start_.x + (end_.x - start_.x) * t;\n\t\t\try = start_.y + (end_.y - start_.y) * t;\n\t\t}\n\t\telse {\n\t\t\trx = end_.x - (end_.x - start_.x) * (1.0 - t);\n\t\t\try = end_.y - (end_.y - start_.y) * (1.0 - t);\n\t\t}\n\n\t\tassert (t < 0 || t > 1.0 || (rx >= start_.x && rx <= end_.x) || (rx <= start_.x && rx >= end_.x));\n\t\tassert (t < 0 || t > 1.0 || (ry >= start_.y && ry <= end_.y) || (ry <= start_.y && ry >= end_.y));\n\t\tresult.x = rx;\n\t\tresult.y = ry;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 8,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/MultiVertexGeometryImpl.java",
    "function_name": "_attributeStreamIsAllocated",
    "function": "\tpublic boolean _attributeStreamIsAllocated(int semantics) {\n\t\tthrowIfEmpty();\n\n\t\tint attributeIndex = m_description.getAttributeIndex(semantics);\n\n\t\tif (attributeIndex >= 0 && m_vertexAttributes[attributeIndex] != null)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 9,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/NumberUtils.java",
    "function_name": "hash",
    "function": "\tstatic int hash(int hashIn, int n) {\n\t\tint hash = ((hashIn << 5) + hashIn) + (n & 0xFF); /* hash * 33 + c */\n\t\thash = ((hash << 5) + hash) + ((n >> 8) & 0xFF);\n\t\thash = ((hash << 5) + hash) + ((n >> 16) & 0xFF);\n\t\thash = ((hash << 5) + hash) + ((n >> 24) & 0xFF);\n\t\thash &= 0x7FFFFFFF;\n\t\treturn hash;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 10,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/util/FileUtil.java",
    "function_name": "extension",
    "function": "  public static String extension(String path)\n  {\n    String name = name(path);\n    int extIndex = name.lastIndexOf(EXTENSION_SEPARATOR.charAt(0));\n    if (extIndex < 0) return \"\";\n    return name.substring(extIndex, name.length());\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 11,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/util/ExceptionFormatter.java",
    "function_name": "condense",
    "function": "  public static String condense(String str) {\n    final int N_START = 10;\n    final int N_END = 10;\n    int len = str.length();\n    if (len <= N_START + N_END + 10) return str;\n    return str.substring(0, N_START)\n        + \"...\"\n        + str.substring(len - N_START, len);\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 12,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/geomfunction/GeometryFunctionRegistry.java",
    "function_name": "functionDescriptionHTML",
    "function": "  public static String functionDescriptionHTML(GeometryFunction func)\n  {\n    String txt = \"<b>\" + func.getSignature() + \"</b>\";\n    String desc = func.getDescription();\n    if (desc != null) {\n      txt += \"<br><br>\" + desc;\n    }\n    return \"<html>\" + txt + \"</html>\";\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 13,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/geomfunction/GeometryFunctionUtil.java",
    "function_name": "toolTipText",
    "function": "  public static String toolTipText(GeometryFunction func) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"<html>\");\n    sb.append(func.getSignature());\n    String desc = func.getDescription();\n    if (desc != null) sb.append(\"<br>\" + desc);\n    sb.append(\"</html>\");\n    return sb.toString();\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 14,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/geomfunction/MetadataUtil.java",
    "function_name": "isRequired",
    "function": "  public static boolean isRequired(Annotation[] anno) {\n    for (int i = 0; i < anno.length; i++) {\n      if (anno[i] instanceof Metadata) {\n        Metadata doc = (Metadata) anno[i];\n        if (doc != null)\n          return doc.isRequired();\n      }\n    }\n    return true;\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 15,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/geomfunction/SpreaderGeometryFunction.java",
    "function_name": "invokeEachA",
    "function": "  private void invokeEachA(Geometry geom, Object[] args, List<Geometry> result) {\n    int nElt = geom.getNumGeometries();\n    for (int i = 0; i < nElt; i++) {\n      Geometry geomN = geom.getGeometryN(i);\n      invokeB(geomN, args, result);\n    }\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 16,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/geomfunction/StaticMethodGeometryFunction.java",
    "function_name": "createFunction",
    "function": "\tpublic static StaticMethodGeometryFunction createFunction(Method method)\n\t{\n\t\tAssert.isTrue(Geometry.class.isAssignableFrom((method.getParameterTypes())[0]));\n\t\t\n\t\tClass<?> clz = method.getDeclaringClass();\n\t\t\n\t\tString category = extractCategory(ClassUtil.getClassname(clz));\n\t\tString funcName = method.getName();\n\t\tString description = extractDescription(method);\n\t\tString[] paramNames = extractParamNames(method);\n\t\tClass<?>[] paramTypes = extractParamTypes(method);\n\t\tClass<?> returnType = method.getReturnType();\n\t\t\n\t\treturn new StaticMethodGeometryFunction(category, funcName, \n\t\t\t\tdescription,\n\t\t\t\tparamNames, paramTypes,\n\t\t\t\treturnType, method);    \n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "ultra-hard"
  },
  {
    "func_id": 17,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/geomfunction/StaticMethodGeometryFunction.java",
    "function_name": "extractRequiredB",
    "function": "  private static boolean extractRequiredB(Method method) {\n    Annotation[][] anno = method.getParameterAnnotations();\n    if (anno.length <= 1) return false;\n    Class<?>[] methodParamTypes = method.getParameterTypes();\n    boolean isRequired = false;\n    if (methodParamTypes[1] == Geometry.class) {\n      isRequired = MetadataUtil.isRequired(anno[1]);\n    }\n    return isRequired;\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 18,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/function/CreateRandomShapeFunctions.java",
    "function_name": "randomPointInTriangle",
    "function": "  private static Coordinate randomPointInTriangle(Coordinate p0, Coordinate p1, Coordinate p2)\n  {\n    double s = Math.random();\n    double t = Math.random();\n    if (s + t > 1) {\n      s = 1.0 - s;\n      t = 1.0 - t;\n    }\n    double a = 1 - (s + t);\n    double b = s;\n    double c = t;\n    \n    double rpx = a * p0.x + b * p1.x + c * p2.x; \n    double rpy = a * p0.y + b * p1.y + c * p2.y; \n    \n    return new Coordinate(rpx, rpy);\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 19,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/function/CreateRandomShapeFunctions.java",
    "function_name": "randomRadialPoints",
    "function": "  public static Geometry randomRadialPoints(Geometry g, int nPts) {\n    Envelope env = FunctionsUtil.getEnvelopeOrDefault(g);\n    GeometryFactory geomFact = FunctionsUtil.getFactoryOrDefault(g);\n    double xLen = env.getWidth();\n    double yLen = env.getHeight();\n    double rMax = Math.min(xLen, yLen) / 2.0;\n    \n    double centreX = env.getMinX() + xLen/2;\n    double centreY = env.getMinY() + yLen/2;\n    \n    List pts = new ArrayList();\n\n    for (int i = 0; i < nPts; i++) {\n      double rand = Math.random();\n      // use rand^2 to accentuate radial distribution\n      double r = rMax * rand * rand;\n      // produces even distribution\n      //double r = rMax * Math.sqrt(rand);\n      double ang = 2 * Math.PI * Math.random();\n      double x = centreX + r * Math.cos(ang);\n      double y = centreY + r * Math.sin(ang);\n      pts.add(geomFact.createPoint(new Coordinate(x, y)));\n    }\n    return geomFact.buildGeometry(pts);\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 20,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/function/CreateRandomShapeFunctions.java",
    "function_name": "haltonOrdinate",
    "function": "  private static double haltonOrdinate(int index, int base)\n  {\n    double result = 0;\n    double f = 1.0 / base;\n    int i = index;\n    while (i > 0) {\n        result = result + f * (i % base);\n        i = (int) Math.floor(i / (double) base);\n        f = f / base;\n    }\n    return result;\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 21,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/function/DiffFunctions.java",
    "function_name": "dupSegments",
    "function": "  private static MultiLineString dupSegments(List<LineSegment> segs, GeometryFactory factory) {\n    Set<LineSegment> segsAll = new HashSet<LineSegment>();\n    List<LineSegment> segsDup = new ArrayList<LineSegment>();\n    for (LineSegment seg : segs) {\n      if (segsAll.contains(seg)) {\n        segsDup.add(seg);\n      }\n      else {\n        segsAll.add(seg);\n      }\n    }\n    return toMultiLineString( segsDup,  factory);\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 22,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jtstest/function/LineHandlingFunctions.java",
    "function_name": "extractChain",
    "function": "  private static LineString extractChain(LineString line, int index, int maxChainSize)\n  {\n    int size = maxChainSize + 1;\n    if (index + size > line.getNumPoints()) \n      size = line.getNumPoints() - index;\n    Coordinate[] pts = new Coordinate[size];\n    for (int i = 0; i < size; i++) {\n      pts[i] = line.getCoordinateN(index + i);\n    }\n    return line.getFactory().createLineString(pts);\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 23,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jts/util/StringUtil.java",
    "function_name": "split",
    "function": " public static String[] split(String s, String separator)\n {\n   int separatorlen = separator.length();\n   ArrayList tokenList = new ArrayList();\n   String tmpString = \"\" + s;\n   int pos = tmpString.indexOf(separator);\n   while (pos >= 0) {\n     String token = tmpString.substring(0, pos);\n     tokenList.add(token);\n     tmpString = tmpString.substring(pos + separatorlen);\n     pos = tmpString.indexOf(separator);\n   }\n   if (tmpString.length() > 0)\n     tokenList.add(tmpString);\n   String[] res = new String[tokenList.size()];\n   for (int i = 0; i < res.length; i++) {\n     res[i] = (String) tokenList.get(i);\n   }\n   return res;\n }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 24,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jts/util/StringUtil.java",
    "function_name": "getStackTrace",
    "function": " public static String getStackTrace(Throwable t, int depth) {\n     String stackTrace = \"\";\n     StringReader stringReader = new StringReader(getStackTrace(t));\n     LineNumberReader lineNumberReader = new LineNumberReader(stringReader);\n     for (int i = 0; i < depth; i++) {\n         try {\n             stackTrace += lineNumberReader.readLine() + NEWLINE;\n         } catch (IOException e) {\n             Assert.shouldNeverReachHere();\n         }\n     }\n     return stackTrace;\n }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 25,
    "project_repo": "https://github.com/locationtech/jts",
    "location": "src/main/java/org/locationtech/jts/util/Stopwatch.java",
    "function_name": "getTimeString",
    "function": "  public static String getTimeString(long timeMillis) {\n    String totalTimeStr = timeMillis < 10000 \n        ? timeMillis + \" ms\" \n        : (double) timeMillis / 1000.0 + \" s\";\n    return totalTimeStr;\n  }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 26,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/TopologicalOperations.java",
    "function_name": "getVertexByIDImpl_",
    "function": "int getVertexByIDImpl_(int vertex, int geometry_id) {\n    EditShape shape = m_topo_graph.getShape();\n    int v;\n    int geometry;\n    int vertex_iterator = m_topo_graph\n            .getClusterVertexIterator(m_topo_graph\n                    .getClusterFromVertex(vertex));\n\n    do {\n        v = m_topo_graph.getVertexFromVertexIterator(vertex_iterator);\n        geometry = shape.getGeometryFromPath(shape.getPathFromVertex(v));\n\n        if (geometry == geometry_id)\n            return v;\n\n        vertex_iterator = m_topo_graph\n                .incrementVertexIterator(vertex_iterator);\n    } while (vertex_iterator != -1);\n\n    return vertex;\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 27,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/TopologicalOperations.java",
    "function_name": "selectVertex_",
    "function": "int selectVertex_(int cluster, EditShape shape) {\n    int vert = -1;\n    for (int iterator = m_topo_graph.getClusterVertexIterator(cluster); iterator != -1; iterator = m_topo_graph\n            .incrementVertexIterator(iterator)) {\n        int vertex = m_topo_graph.getVertexFromVertexIterator(iterator);\n        if (vert == -1)\n            vert = vertex;\n        int geometry = shape.getGeometryFromPath(shape\n                .getPathFromVertex(vertex));\n        int geomID = m_topo_graph.getGeometryID(geometry);\n        if (isGoodParentage(geomID)) {\n            vert = vertex;\n            break;\n        }\n    }\n\n    return vert;\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 28,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/StringUtils.java",
    "function_name": "removeTrailingZeros_",
    "function": "static private StringBuilder removeTrailingZeros_(String str_dbl) {\n    StringBuilder buffer = new StringBuilder(str_dbl);\n    int non_zero = buffer.length() - 1;\n\n    while (buffer.charAt(non_zero) == '0') {\n        non_zero--;\n    }\n\n    buffer.delete(non_zero + 1, buffer.length());\n\n    if (buffer.charAt(non_zero) == '.') {\n        buffer.deleteCharAt(non_zero);\n    }\n\n    return buffer;\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 29,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Proximity2DResult.java",
    "function_name": "getCoordinate",
    "function": "public Point getCoordinate() {\n    if (isEmpty())\n        throw new GeometryException(\"invalid call\");\n\n    return new Point(m_coordinate.x, m_coordinate.y);\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 30,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Proximity2DResult.java",
    "function_name": "getDistance",
    "function": "public double getDistance() {\n\t\tif (isEmpty())\n\t\t\tthrow new GeometryException(\"invalid call\");\n\n\t\treturn m_distance;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 31,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Polyline.java",
    "function_name": "getDimension",
    "function": "public int getDimension() {\n    return 1;\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 32,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Point.java",
    "function_name": "getXYZ",
    "function": "public Point3D getXYZ() {\n    Point3D pt = new Point3D();\n    pt.x = m_x;\n    pt.y = m_y;\n    pt.z = hasZ() ? m_attributes[0] : VertexDescription.getDefaultValue(VertexDescription.Semantics.Z);\n\n    return pt;\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 33,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/Point.java",
    "function_name": "getAttributeAsDbl",
    "function": "public double getAttributeAsDbl(int semantics, int ordinate) {\n    if (semantics == VertexDescription.Semantics.POSITION) {\n        if (ordinate == 0) {\n            return m_x;\n        }\n        else if (ordinate == 1) {\n            return m_y;\n        }\n        else {\n            throw new IndexOutOfBoundsException();\n        }\n    }\n    \n    int ncomps = VertexDescription.getComponentCount(semantics);\n    if (ordinate >= ncomps)\n        throw new IndexOutOfBoundsException();\n\n    int attributeIndex = m_description.getAttributeIndex(semantics);\n    if (attributeIndex >= 0)\n        return m_attributes[m_description\n                ._getPointAttributeOffset(attributeIndex) - 2 + ordinate];\n    else\n        return VertexDescription.getDefaultValue(semantics);\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 34,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/OperatorSimplifyLocalHelper.java",
    "function_name": "testToleranceDistance_",
    "function": "private boolean testToleranceDistance_(int xyindex1, int xyindex2) {\n    double x1 = m_xy.read(2 * xyindex1);\n    double y1 = m_xy.read(2 * xyindex1 + 1);\n    double x2 = m_xy.read(2 * xyindex2);\n    double y2 = m_xy.read(2 * xyindex2 + 1);\n    boolean b = !Clusterer.isClusterCandidate_(x1, y1, x2, y2,\n            m_toleranceIsSimple * m_toleranceIsSimple);\n    if (!b) {\n        if (m_geometry.getDimension() == 0)\n            return false;\n\n        return (x1 == x2 && y1 == y2); // points either coincide or\n                                        // further,than the tolerance\n    }\n\n    return b;\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 35,
    "project_repo": "https://github.com/looly/hutool",
    "location": "src/main/java/cn/hutool/core/util/ArrayUtil.java",
    "function_name": "hasNull",
    "function": "public static <T> boolean hasNull(T... array) {\n\t\tif (isNotEmpty(array)) {\n\t\t\tfor (T element : array) {\n\t\t\t\tif (ObjectUtil.isNull(element)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn array == null;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 36,
    "project_repo": "https://github.com/Esri/geometry-api-java",
    "location": "src/main/java/com/esri/core/geometry/TopologicalOperations.java",
    "function_name": "getVertexByID_",
    "function": "int getVertexByID_(int vertex, int geometry_id) {\n    if (geometry_id == -1)\n        return vertex;\n\n    return getVertexByIDImpl_(vertex, geometry_id);\n}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 37,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
    "function_name": "newBigInteger",
    "function": "public static BigInteger newBigInteger(String str) {\n\t\tstr = StrUtil.trimToNull(str);\n\t\tif (null == str) {\n\t\t\treturn null;\n\t\t}\n\n\t\tint pos = 0; // 数字字符串位置\n\t\tint radix = 10;\n\t\tboolean negate = false; // 负数与否\n\t\tif (str.startsWith(\"-\")) {\n\t\t\tnegate = true;\n\t\t\tpos = 1;\n\t\t}\n\t\tif (str.startsWith(\"0x\", pos) || str.startsWith(\"0X\", pos)) {\n\t\t\t// hex\n\t\t\tradix = 16;\n\t\t\tpos += 2;\n\t\t} else if (str.startsWith(\"#\", pos)) {\n\t\t\t// alternative hex (allowed by Long/Integer)\n\t\t\tradix = 16;\n\t\t\tpos++;\n\t\t} else if (str.startsWith(\"0\", pos) && str.length() > pos + 1) {\n\t\t\t// octal; so long as there are additional digits\n\t\t\tradix = 8;\n\t\t\tpos++;\n\t\t} // default is to treat as decimal\n\n\t\tif (pos > 0) {\n\t\t\tstr = str.substring(pos);\n\t\t}\n\t\tfinal BigInteger value = new BigInteger(str, radix);\n\t\treturn negate ? value.negate() : value;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 38,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
    "function_name": "partValue",
    "function": "public static int partValue(int total, int partCount, boolean isPlusOneWhenHasRem) {\n\t\tint partValue = 0;\n\t\tif (total % partCount == 0) {\n\t\t\tpartValue = total / partCount;\n\t\t} else {\n\t\t\tpartValue = (int) Math.floor(total / partCount);\n\t\t\tif (isPlusOneWhenHasRem) {\n\t\t\t\tpartValue += 1;\n\t\t\t}\n\t\t}\n\t\treturn partValue;\n\t}\n",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 39,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/NumberUtil.java",
    "function_name": "toBytes",
    "function": "public static byte[] toBytes(int value) {\n\t\tfinal byte[] result = new byte[4];\n\n\t\tresult[0] = (byte) (value >> 24);\n\t\tresult[1] = (byte) (value >> 16);\n\t\tresult[2] = (byte) (value >> 8);\n\t\tresult[3] = (byte) (value /* >> 0 */);\n\n\t\treturn result;\n\t}\n",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 40,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/HashUtil.java",
    "function_name": "fnvHash",
    "function": "public static int fnvHash(String data) {\n\t\tfinal int p = 16777619;\n\t\tint hash = (int) 2166136261L;\n\t\tfor (int i = 0; i < data.length(); i++) {\n\t\t\thash = (hash ^ data.charAt(i)) * p;\n\t\t}\n\t\thash += hash << 13;\n\t\thash ^= hash >> 7;\n\t\thash += hash << 3;\n\t\thash ^= hash >> 17;\n\t\thash += hash << 5;\n\t\treturn hash;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 41,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/HashUtil.java",
    "function_name": "parseArray",
    "function": "public static JSONArray parseArray(String jsonStr) {\n\t\treturn new JSONArray(jsonStr);\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 42,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-json/src/main/java/cn/hutool/json/JSONUtil.java",
    "function_name": "parse",
    "function": "public static JSON parse(Object obj) {\n\t\tif (null == obj) {\n\t\t\treturn null;\n\t\t}\n\n\t\tJSON json = null;\n\t\tif (obj instanceof JSON) {\n\t\t\tjson = (JSON) obj;\n\t\t} else if (obj instanceof String) {\n\t\t\tString jsonStr = ((String) obj).trim();\n\t\t\tif (jsonStr.startsWith(\"[\")) {\n\t\t\t\tjson = parseArray(jsonStr);\n\t\t\t} else {\n\t\t\t\tjson = parseObj(jsonStr);\n\t\t\t}\n\t\t} else if (obj instanceof Collection || obj.getClass().isArray()) {// 列表\n\t\t\tjson = new JSONArray(obj);\n\t\t} else {// 对象\n\t\t\tjson = new JSONObject(obj);\n\t\t}\n\n\t\treturn json;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 43,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/XmlUtil.java",
    "function_name": "escape",
    "function": "public static String escape(String string) {\n\t\tfinal StringBuilder sb = new StringBuilder(string.length());\n\t\tfor (int i = 0, length = string.length(); i < length; i++) {\n\t\t\tchar c = string.charAt(i);\n\t\t\tswitch (c) {\n\t\t\tcase '&':\n\t\t\t\tsb.append(\"&amp;\");\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tsb.append(\"&lt;\");\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tsb.append(\"&gt;\");\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\tsb.append(\"&quot;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tsb.append(\"&apos;\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsb.append(c);\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 44,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/util/PageUtil.java",
    "function_name": "rainbow",
    "function": "public static int[] rainbow(int currentPage, int pageCount, int displayCount) {\n\t\tboolean isEven = true;\n\t\tisEven = displayCount % 2 == 0;\n\t\tint left = displayCount / 2;\n\t\tint right = displayCount / 2;\n\n\t\tint length = displayCount;\n\t\tif (isEven) {\n\t\t\tright++;\n\t\t}\n\t\tif (pageCount < displayCount) {\n\t\t\tlength = pageCount;\n\t\t}\n\t\tint[] result = new int[length];\n\t\tif (pageCount >= displayCount) {\n\t\t\tif (currentPage <= left) {\n\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\tresult[i] = i + 1;\n\t\t\t\t}\n\t\t\t} else if (currentPage > pageCount - right) {\n\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\tresult[i] = i + pageCount - displayCount + 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\t\tresult[i] = i + currentPage - left + (isEven ? 1 : 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\tresult[i] = i + 1;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  },
  {
    "func_id": 45,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
    "function_name": "calendar",
    "function": "public static Calendar calendar(Date date) {\n\t\tif(date instanceof DateTime) {\n\t\t\treturn ((DateTime)date).toCalendar();\n\t\t}else {\n\t\t\treturn calendar(date.getTime());\n\t\t}\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 46,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
    "function_name": "yearAndQuarter",
    "function": "public static LinkedHashSet<String> yearAndQuarter(long startDate, long endDate) {\n\t\tLinkedHashSet<String> quarters = new LinkedHashSet<>();\n\t\tfinal Calendar cal = calendar(startDate);\n\t\twhile (startDate <= endDate) {\n\t\t\t// 如果开始时间超出结束时间，让结束时间为开始时间，处理完后结束循环\n\t\t\tquarters.add(yearAndQuarter(cal));\n\n\t\t\tcal.add(Calendar.MONTH, 3);\n\t\t\tstartDate = cal.getTimeInMillis();\n\t\t}\n\n\t\treturn quarters;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 47,
    "project_repo": "https://github.com/looly/hutool",
    "location": "hutool-core/src/main/java/cn/hutool/core/date/DateUtil.java",
    "function_name": "parse",
    "function": "public static DateTime parse(String dateStr) {\n\t\tif (null == dateStr) {\n\t\t\treturn null;\n\t\t}\n\t\t// 去掉两边空格并去掉中文日期中的“日”，以规范长度\n\t\tdateStr = dateStr.trim().replace(\"日\", \"\");\n\t\tint length = dateStr.length();\n\n\t\tif (Validator.isNumber(dateStr)) {\n\t\t\t// 纯数字形式\n\t\t\tif (length == DatePattern.PURE_DATETIME_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_DATETIME_FORMAT);\n\t\t\t} else if (length == DatePattern.PURE_DATETIME_MS_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_DATETIME_MS_FORMAT);\n\t\t\t} else if (length == DatePattern.PURE_DATE_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_DATE_FORMAT);\n\t\t\t} else if (length == DatePattern.PURE_TIME_PATTERN.length()) {\n\t\t\t\treturn parse(dateStr, DatePattern.PURE_TIME_FORMAT);\n\t\t\t}\n\t\t}\n\n\t\tif (length == DatePattern.NORM_DATETIME_PATTERN.length() || length == DatePattern.NORM_DATETIME_PATTERN.length() + 1) {\n\t\t\tif (dateStr.contains(\"T\")) {\n\t\t\t\t// UTC时间格式：类似2018-09-13T05:34:31\n\t\t\t\treturn parseUTC(dateStr);\n\t\t\t}\n\t\t\treturn parseDateTime(dateStr);\n\t\t} else if (length == DatePattern.NORM_DATE_PATTERN.length()) {\n\t\t\treturn parseDate(dateStr);\n\t\t} else if (length == DatePattern.NORM_TIME_PATTERN.length() || length == DatePattern.NORM_TIME_PATTERN.length() + 1) {\n\t\t\treturn parseTimeToday(dateStr);\n\t\t} else if (length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() || length == DatePattern.NORM_DATETIME_MINUTE_PATTERN.length() + 1) {\n\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MINUTE_FORMAT);\n\t\t} else if (length >= DatePattern.NORM_DATETIME_MS_PATTERN.length() - 2) {\n\t\t\treturn parse(normalize(dateStr), DatePattern.NORM_DATETIME_MS_FORMAT);\n\t\t}\n\n\t\t// 没有更多匹配的时间格式\n\t\tthrow new DateException(\"No format fit for date String [{}] !\", dateStr);\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 48,
    "project_repo": "https://github.com/looly/hutool",
    "location": "src/main/java/cn/hutool/core/util/CreditCodeUtil.java",
    "function_name": "getParityBit",
    "function": "\tprivate static int getParityBit(CharSequence creditCode) {\n\t\tint sum = 0;\n\t\tInteger codeIndex;\n\t\tfor (int i = 0; i < 17; i++) {\n\t\t\tcodeIndex = CODE_INDEX_MAP.get(creditCode.charAt(i));\n\t\t\tif (null == codeIndex) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tsum += codeIndex * WEIGHT[i];\n\t\t}\n\t\tfinal int result = 31 - sum % 31;\n\t\treturn result == 31 ? 0 : result;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "medium"
  },
  {
    "func_id": 49,
    "project_repo": "https://github.com/looly/hutool",
    "location": "src/main/java/cn/hutool/core/util/NumberUtil.java",
    "function_name": "add",
    "function": "public static BigDecimal add(Number... values) {\n\t\tif (ArrayUtil.isEmpty(values)) {\n\t\t\treturn BigDecimal.ZERO;\n\t\t}\n\n\t\tNumber value = values[0];\n\t\tBigDecimal result = toBigDecimal(value);\n\t\tfor (int i = 1; i < values.length; i++) {\n\t\t\tvalue = values[i];\n\t\t\tif (null != value) {\n\t\t\t\tresult = result.add(toBigDecimal(value));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "hard"
  },
  {
    "func_id": 50,
    "project_repo": "https://github.com/hankcs/HanLP/",
    "location": "src/main/java/com/hankcs/hanlp/utility/ByteUtil.java",
    "function_name": "bytesToLong",
    "function": "public static long bytesToLong(byte[] b)\n    {\n        long l = ((long) b[0] << 56) & 0xFF00000000000000L;\n        // 如果不强制转换为long，那么默认会当作int，导致最高32位丢失\n        l |= ((long) b[1] << 48) & 0xFF000000000000L;\n        l |= ((long) b[2] << 40) & 0xFF0000000000L;\n        l |= ((long) b[3] << 32) & 0xFF00000000L;\n        l |= ((long) b[4] << 24) & 0xFF000000L;\n        l |= ((long) b[5] << 16) & 0xFF0000L;\n        l |= ((long) b[6] << 8) & 0xFF00L;\n        l |= (long) b[7] & 0xFFL;\n        return l;\n    }",
    "non_primitive_data_objects": "",
    "primitive_data_objects": "",
    "input": "",
    "expected_output": "",
    "flag": "easy"
  }
]